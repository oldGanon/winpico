static const u8 Permutation[256] = {
    125,173,189, 59, 12,119,186,199, 76,198,245, 33,133, 24, 14,136, 
    72, 157, 54, 43, 52,240,247, 13, 32, 90, 18,130,206, 47,221,105,
    117,160,213,223,155,218,121, 39, 38,114,195,139,243, 78, 36,185,
    196,194, 11,237, 35,147,150,152,224,216,178,183,204, 57, 87, 61,
    188, 92,226, 22, 91,180,171, 96, 48,187, 69,220, 80, 64, 21,202,
    115,124,118, 95,126,233,235, 73, 85, 19,177,161,116, 99, 42,  3,
     82, 75, 79,181,208, 27, 70,  1, 88,127,232,239, 86,113,244,153,
    168,129,212,142,143, 55,251,128,210,151,175, 89, 71,209, 15,184,
    193, 62,231,  2,250,191,166, 23,234,131,165,219, 26, 94,246, 68,
     60, 16,  0, 53,238,  4,201, 50,170, 20,176,222, 10, 84,162, 74,
      6,241,215,227, 58,146,145,169,197, 44, 28,205,112, 17,230,249,
      7,252,100,101,111, 83,140, 40, 93,159, 67,  8,135,179, 41,156,
    163, 45,203, 25,211,134, 65,122,149, 29,144, 81, 77,254,229,104,
    242,174,236,192, 97,207,164, 98,148,214,138,102,123,  9, 63,167,
     31,200, 30,109,217,103, 37,228, 46, 56,141,132,190,107,106,253, 
     34,110,182,  5,248, 51, 49,255, 66,225,108,154,172,137,120,158,
};

static r32
Noise_Grad(i32 hash, r32 x)
{
    r32 grad = 1.0f + (hash & 7);
    if ((hash & 8) != 0) 
        grad = -grad;
    return (grad * x);
}

static r32
Noise(r32 x) 
{
    i32 i0 = (i32)x;
    if (x < i0) --i0;
    i32 i1 = i0 + 1;
    r32 x0 = x - i0;
    r32 x1 = x0 - 1.0f;

    r32 t0 = 1.0f - x0*x0;
    t0 *= t0;
    r32 n0 = t0 * t0 * Noise_Grad(Permutation[i0&255], x0);

    r32 t1 = 1.0f - x1*x1;
    t1 *= t1;
    r32 n1 = t1 * t1 * Noise_Grad(Permutation[i1&255], x1);

    return 0.395f * (n0 + n1);
}